/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas.Salas;

import control.ControlDeNavegacion;
import control.IControl;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import utilitades.Utilerias;

/**
 * Clase para la creacion del menu del caso de uso de gestion de salas
 * @author Ramon Valencia
 */
public final class MenuSalas extends javax.swing.JFrame {
    
    private final Utilerias utilerias = new Utilerias(); //Objeto Utilerias para poder obtener sus metodos
    private final IControl control = ControlDeNavegacion.getInstancia(); //Instancia del control de navegacion

    private final int tamSeparacionbBtns = 15; // Variable que sirve para definir el tamaño de separacion entre los botones
    // Variables para la configuracion de los botones
    private final int alturaBoton = 40; //Altura del boton
    private final int anchoBoton = 300; // Ancho del boton
    private final Font fuenteBoton = new Font("Tw Cen MT Condensed", Font.BOLD, 24); // Fuente del boton
    private final Dimension tamañoBoton = new Dimension(anchoBoton, alturaBoton); // Dimension del boton
    private final Color colorBoton = new Color(162, 132, 94); // Color general del boton
    private final Color colorBotonFore = new Color(255, 255, 255); //Color del contorno del boton

    
    /**
     * Constructor de la clase
     */
    public MenuSalas() {
        utilerias.configurarFrameBase(this, "MENU SALAS"); // Metodo para configurar la base de la pantalla
        configurarMenuSalas(); // Metodo para toda la configuracion adicional y unica de esta pantalla
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregar = new javax.swing.JButton();
        btnEstadisticas = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnConsultas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgregar.setText("Agregar Sala");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEstadisticas.setText("Estadisticas");

        btnModificar.setText("Modificar Sala");

        btnConsultas.setText("Consultar Reservas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConsultas)
                    .addComponent(btnModificar)
                    .addComponent(btnEstadisticas)
                    .addComponent(btnAgregar))
                .addContainerGap(194, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(btnAgregar)
                .addGap(18, 18, 18)
                .addComponent(btnEstadisticas)
                .addGap(18, 18, 18)
                .addComponent(btnModificar)
                .addGap(18, 18, 18)
                .addComponent(btnConsultas)
                .addContainerGap(262, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsultas;
    private javax.swing.JButton btnEstadisticas;
    private javax.swing.JButton btnModificar;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Metodo para toda la configuracion especifica de esta pantalla
     */
    public void configurarMenuSalas() {
        configurarBotonVolver();
        JPanel panelBotones = new JPanel();
        crearEstructuraPanelBotones(panelBotones); // Se llama al metodo para configurar la estructura del panel de botones

        JPanel panelCentral = new JPanel();

        panelCentral.setLayout(new BoxLayout(panelCentral, BoxLayout.Y_AXIS)); // Layout para alinear los botones en una sola columna

        panelCentral.add(Box.createVerticalStrut(110)); // Espacio vacio para darle formato a la pantalla
        panelCentral.add(panelBotones);
        panelCentral.add(Box.createVerticalGlue());

        add(panelCentral, BorderLayout.CENTER);

    }
    /**
     * Metodo para crear la estructura del panel donde iran todos los botones 
     * que serviran para ir a otra pagina del caso de uso
     * @param panelBotones 
     */
    private void crearEstructuraPanelBotones(JPanel panelBotones) {
        panelBotones.setLayout(new BoxLayout(panelBotones, BoxLayout.Y_AXIS));

        //Boton que lleva a la pantalla para agregar una sala
        btnAgregar = new JButton("Agregar Sala");
        configurarBoton(btnAgregar);
        agregarBotonEnBox(btnAgregar, panelBotones);

        //Boton que lleva a la pantalla de las estadisticas de las salas
        btnEstadisticas = new JButton("Estadisticas");
        configurarBoton(btnEstadisticas);
        agregarBotonEnBox(btnEstadisticas, panelBotones);

        //Boton que lleva a la pantalla para modificar una sala
        btnModificar = new JButton("Modificar Sala");
        configurarBoton(btnModificar);
        agregarBotonEnBox(btnModificar, panelBotones);

        //Boton que lleva a la pantalla para consultar las reservas de cada sala
        btnConsultas = new JButton("Consultar Reservas");
        configurarBoton(btnConsultas);
        agregarBotonEnBox(btnConsultas, panelBotones);

        panelBotones.setVisible(true);
        panelBotones.revalidate();
        panelBotones.repaint();
    }

    /**
     * Metodo para configurar el obtener el boton volver del frameBase y
     * configurarlo para que nos regrese a la ventana anterior
     */
    public void configurarBotonVolver() {
        Container frame = this.getContentPane();
        JPanel panel = (JPanel) frame.getComponent(0);
        JButton btnVolver = (JButton) panel.getComponent(0);
        // Se le añade un action listener para que cierre esta pantalla y abra la anterior
        btnVolver.addActionListener((ActionEvent e) -> {
            control.mostrarMenuAdministrador(this, null);
            dispose();
        });

    }
    /**
     * Metodo para agregarle la funcionalidad a cada boton, 
     * de esta manera cada boton llamara al control para que este se encargue de cargar la pagina deseada
     * @param boton
     * @param panel 
     */
    private void agregarBotonEnBox(JButton boton, JPanel panel) {
        panel.add(boton);
        // Se verifica que el tamaño de separacion de los botones sea mayor a 0
        if (tamSeparacionbBtns > 0) {
            panel.add(Box.createVerticalStrut(tamSeparacionbBtns)); //Agregar espacios entre los botones
        }
        String textoBoton = boton.getText();
        // Se le añade un action listener y dependiendo del nombre del boton es la pantalla a la que lo va a transportar
        boton.addActionListener((ActionEvent e) -> {
            switch (textoBoton) {
                case "Agregar Sala" -> {
                    control.mostrarAgregarSala(this); // Metodo para abrir la pantalla AgregarSala
                    break;
                }
                case "Estadisticas" -> {
                    control.mostrarEstadisticasSala(this); // Metodo para abrir la pantalla Estadisticas Sala
                    break;
                }
                case "Modificar Sala" -> {
                    control.mostrarSeleccionarSala(this); // Metodo para abrir la pantalla Seleccionar Sala
                    break;
                }
                case "Consultar Reservas" -> {
                    control.mostrarConsultarFuncionesSalas(this);
                    break;
                }
                default ->
                    JOptionPane.showMessageDialog(null, "Hubo un problema para cargar esa ventana intente luego", "INFO", JOptionPane.INFORMATION_MESSAGE);

            }
        });

    }
    /**
     * Metodo para configurar los botones de seleccion de pagina
     * @param boton 
     */
    private void configurarBoton(JButton boton) {
        boton.setMaximumSize(tamañoBoton); // Configuracion del tamaño
        boton.setPreferredSize(tamañoBoton);
        boton.setAlignmentX(Component.CENTER_ALIGNMENT); // Centrado del texto del boton
        boton.setFont(fuenteBoton); // Configuracion de la fuente del boton
        boton.setBackground(colorBoton); // Configuracion del color de fondo del boton
        boton.setForeground(colorBotonFore); // Configuraciond del color del contorno del boton
    }
}
