/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas.Usuarios;

import DTOs.ClienteDTO;
import DTOs.CompraDTO;
import DTOs.UsuarioDTO;
import control.ControlDeNavegacion;
import control.IControl;
import entidades.Compra;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JTable;
import pantallas.MenuPrincipalCliente;
import utilitades.ModeladoTablas;

/**
 *
 * @author sonic
 */
/**
 * Clase que representa la interfaz gr√°fica para mostrar el historial de compras de un cliente.
 */
public class HistorialCliente extends javax.swing.JFrame {
    private JFrame frameAnterior;
    private ClienteDTO clienteActual;
    private final IControl control = ControlDeNavegacion.getInstancia();

    /**
     * Creates new form HistorialCliente
     */
    public HistorialCliente(JFrame frameAnterior, ClienteDTO clienteActual) {
        initComponents();
        this.clienteActual = clienteActual;
        this.frameAnterior = frameAnterior;
        
        // Muestra el nombre completo del cliente en un label segun el cliente que se haya encontrado
        lblNombreCompleto.setText(clienteActual.getNombre() + " " + clienteActual.getApellidoPaterno() + " " + clienteActual.getApellidoMaterno());
        
        //Se obtiene la lista de compras del cliente en especifico llamando al metodo del control cargarHistorialCompras
        List<CompraDTO> listaCompras = control.cargarHistorialCompras(clienteActual);
        
        //Una vez que se obtuvo la lista de compras del cliente se llama al metodo para cargar la lista de compras en la tabla del frame
        cargarListaCompras(listaCompras);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblNombreCompleto = new javax.swing.JLabel();
        panelTabla = new javax.swing.JScrollPane();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(680, 820));
        setSize(new java.awt.Dimension(680, 820));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Historial de compras del cliente: ");

        lblNombreCompleto.setText("jLabel2");

        btnVolver.setBackground(new java.awt.Color(162, 132, 94));
        btnVolver.setText("< Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNombreCompleto)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblNombreCompleto))
                .addGap(18, 18, 18)
                .addComponent(panelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        if (frameAnterior instanceof MenuPrincipalCliente) {
            control.mostrarMenuCliente(this);
            dispose();
        } else if (frameAnterior instanceof ConsultarUsuarios) {
            control.mostrarGestionDeUsuarios(this, null);
            dispose();
        }
        dispose();
        
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    
    //Metodo auxiliar que genera una tabla con la informacion de el historial de compras de un cliente especifico
    private void cargarListaCompras(List<CompraDTO> listaUsuarios) {
        //Primero se definen las columnas de la tabla
        String[] columnas = {
            "Usuario", "Monto", "FechaHoraPago", "EstadoPago", "MetodoPago", "FechaCompra"
        };

        //Se crea un array que contendra los datos que llenaran la tabla
        Object[][] datosTabla = new Object[listaUsuarios.size()][columnas.length];

        for (int i = 0; i < listaUsuarios.size(); i++) {
            CompraDTO compra = listaUsuarios.get(i); //por cada compraDTO de la lista se creara una fila de la tabla con:
            datosTabla[i] = new Object[]{
                compra.getUsuarioCliente(), //nombre del usuario asociado a la compra
                compra.getPago().getMonto(), //monto pagado en dicha compra
                compra.getPago().getFechaHora(), //fecha y hora de la transaccion
                compra.getPago().getEstado(), //estado del pago de la compra
                compra.getMetodoPago(), //metodo de pago utilizado
                compra.getFecha() //fecha de la compra
            };
        }

        //Se llama al metodo creacionTablaSencilla de la utileria para generar la tabla con los datos que definimos anteriormente
        JTable tablaUsuarios = ModeladoTablas.creacionTablaSencilla(columnas, datosTabla, 14, 28);


        //Se le setea la tabla generada con todos los datos de las compras del cliente que se esta consultando al scrollpane del frame
        panelTabla.setViewportView(tablaUsuarios);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNombreCompleto;
    private javax.swing.JScrollPane panelTabla;
    // End of variables declaration//GEN-END:variables
}
