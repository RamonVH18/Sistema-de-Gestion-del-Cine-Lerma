/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas.administracionPeliculas;

import DTOs.PeliculaDTO;
import control.ControlDeNavegacion;
import control.IControl;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.JOptionPane;
import utilitades.RenderizadorImagenPelicula;

/**
 * Clase que representa la pantalla de Detalles Pelicula.
 *
 * Accede a la clase de control de navegacion para navegar entre distintas
 * pantallas del CU y darles funcionamiento.
 *
 * @author Daniel M
 */
public class DetallesPelicula extends javax.swing.JFrame {

    private final IControl control = ControlDeNavegacion.getInstancia();
    private PeliculaDTO peliculaDTO = new PeliculaDTO();

    /**
     * Constructor de la clase. Inicializa la ventana y carga los detalles de la
     * película.
     *
     * @param peliculaDTO Objeto que contiene los datos de la película a
     * mostrar.
     */
    public DetallesPelicula(PeliculaDTO peliculaDTO) {
        initComponents();
        this.peliculaDTO = peliculaDTO;
        cargarDetallesPelicula(peliculaDTO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlabelTitulo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanelImagenPelicula = new javax.swing.JPanel();
        jlabelGenero = new javax.swing.JLabel();
        jlabelTitulo2 = new javax.swing.JLabel();
        jlabelClasificacion = new javax.swing.JLabel();
        jlabelDuracion = new javax.swing.JLabel();
        jlabelSinopsis = new javax.swing.JLabel();
        btnEditarPelicula = new javax.swing.JButton();
        btnDarBajaOAlta = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnaVolver = new javax.swing.JButton();
        jlabelEstado = new javax.swing.JLabel();
        jLabelMostrarTitulo = new javax.swing.JLabel();
        jLabelMostrarGenero = new javax.swing.JLabel();
        jLabelMostrarDuracion = new javax.swing.JLabel();
        jLabelMostrarClasificacion = new javax.swing.JLabel();
        jLabelMostrarSinopsis = new javax.swing.JLabel();
        jlabelTituloDetalles = new javax.swing.JLabel();
        jLabelMostrarEstado = new javax.swing.JLabel();

        jlabelTitulo.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 48)); // NOI18N
        jlabelTitulo.setText("Peliculas en Cartelera");

        jLabel3.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(650, 880));
        setMinimumSize(new java.awt.Dimension(650, 880));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelImagenPelicula.setMaximumSize(new java.awt.Dimension(225, 325));
        jPanelImagenPelicula.setMinimumSize(new java.awt.Dimension(225, 325));

        javax.swing.GroupLayout jPanelImagenPeliculaLayout = new javax.swing.GroupLayout(jPanelImagenPelicula);
        jPanelImagenPelicula.setLayout(jPanelImagenPeliculaLayout);
        jPanelImagenPeliculaLayout.setHorizontalGroup(
            jPanelImagenPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );
        jPanelImagenPeliculaLayout.setVerticalGroup(
            jPanelImagenPeliculaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelImagenPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 105, -1, -1));

        jlabelGenero.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jlabelGenero.setText("Género:");
        getContentPane().add(jlabelGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 153, -1, -1));

        jlabelTitulo2.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jlabelTitulo2.setText("Título:");
        getContentPane().add(jlabelTitulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 111, -1, -1));

        jlabelClasificacion.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jlabelClasificacion.setText("Clasificación:");
        getContentPane().add(jlabelClasificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 237, -1, -1));

        jlabelDuracion.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jlabelDuracion.setText("Duración:");
        getContentPane().add(jlabelDuracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 195, -1, -1));

        jlabelSinopsis.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jlabelSinopsis.setText("Sinopsis:");
        getContentPane().add(jlabelSinopsis, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, -1, -1));

        btnEditarPelicula.setBackground(new java.awt.Color(162, 132, 94));
        btnEditarPelicula.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnEditarPelicula.setForeground(new java.awt.Color(255, 255, 255));
        btnEditarPelicula.setText("Editar");
        btnEditarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPeliculaActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditarPelicula, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 590, 128, -1));

        btnDarBajaOAlta.setBackground(new java.awt.Color(162, 132, 94));
        btnDarBajaOAlta.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnDarBajaOAlta.setForeground(new java.awt.Color(255, 255, 255));
        btnDarBajaOAlta.setText("Dar de Baja/Alta");
        btnDarBajaOAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaOAltaActionPerformed(evt);
            }
        });
        getContentPane().add(btnDarBajaOAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 639, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(162, 132, 94));
        btnEliminar.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 688, 128, -1));

        btnaVolver.setBackground(new java.awt.Color(162, 132, 94));
        btnaVolver.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        btnaVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnaVolver.setText("< Volver");
        btnaVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnaVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 782, -1, -1));

        jlabelEstado.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jlabelEstado.setText("Estado:");
        getContentPane().add(jlabelEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, -1, -1));

        jLabelMostrarTitulo.setText("jLabel1");
        getContentPane().add(jLabelMostrarTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 117, -1, -1));

        jLabelMostrarGenero.setText("jLabel1");
        getContentPane().add(jLabelMostrarGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 159, -1, -1));

        jLabelMostrarDuracion.setText("jLabel1");
        getContentPane().add(jLabelMostrarDuracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 201, -1, -1));

        jLabelMostrarClasificacion.setText("jLabel1");
        getContentPane().add(jLabelMostrarClasificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 243, -1, -1));

        jLabelMostrarSinopsis.setText("jLabel1");
        getContentPane().add(jLabelMostrarSinopsis, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, -1, -1));

        jlabelTituloDetalles.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 48)); // NOI18N
        jlabelTituloDetalles.setText("Detalles Película");
        getContentPane().add(jlabelTituloDetalles, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        jLabelMostrarEstado.setText("jLabel1");
        getContentPane().add(jLabelMostrarEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento que se ejecuta al presionar el botón de "Editar". Abre la ventana
     * para editar la película.
     *
     * @param evt Evento del botón.
     */
    private void btnEditarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPeliculaActionPerformed
        control.mostrarEditarPelicula(peliculaDTO);
        dispose();
    }//GEN-LAST:event_btnEditarPeliculaActionPerformed

    /**
     * Evento que se ejecuta al presionar el botón de "Dar de Baja o Alta". Este
     * método está vacío ya que el comportamiento es definido dinámicamente.
     *
     * @param evt Evento del botón.
     */
    private void btnDarBajaOAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaOAltaActionPerformed

    }//GEN-LAST:event_btnDarBajaOAltaActionPerformed

    /**
     * Evento que se ejecuta al presionar el botón de "Eliminar". Llama al
     * método para eliminar la película.
     *
     * @param evt Evento del botón.
     */
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarPelicula(peliculaDTO);
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Evento que se ejecuta al presionar el botón de "Volver". Regresa al menú
     * anterior de administración de películas.
     *
     * @param evt Evento del botón.
     */
    private void btnaVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaVolverActionPerformed
        control.mostrarMenuAdministrarPeliculas(this);
        dispose();
    }//GEN-LAST:event_btnaVolverActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDarBajaOAlta;
    private javax.swing.JButton btnEditarPelicula;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnaVolver;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelMostrarClasificacion;
    private javax.swing.JLabel jLabelMostrarDuracion;
    private javax.swing.JLabel jLabelMostrarEstado;
    private javax.swing.JLabel jLabelMostrarGenero;
    private javax.swing.JLabel jLabelMostrarSinopsis;
    private javax.swing.JLabel jLabelMostrarTitulo;
    private javax.swing.JPanel jPanelImagenPelicula;
    private javax.swing.JLabel jlabelClasificacion;
    private javax.swing.JLabel jlabelDuracion;
    private javax.swing.JLabel jlabelEstado;
    private javax.swing.JLabel jlabelGenero;
    private javax.swing.JLabel jlabelSinopsis;
    private javax.swing.JLabel jlabelTitulo;
    private javax.swing.JLabel jlabelTitulo2;
    private javax.swing.JLabel jlabelTituloDetalles;
    // End of variables declaration//GEN-END:variables

    /**
     * Carga todos los detalles de la película en la interfaz gráfica. También
     * asigna dinámicamente el comportamiento del botón de alta/baja según el
     * estado.
     *
     * @param peliculaDTO Objeto con los datos de la película.
     */
    private void cargarDetallesPelicula(PeliculaDTO peliculaDTO) {
        jLabelMostrarTitulo.setText(peliculaDTO.getTitulo());
        jLabelMostrarGenero.setText(peliculaDTO.getGenero());
        jLabelMostrarDuracion.setText(peliculaDTO.getDuracion().toString() + " minutos");
        jLabelMostrarClasificacion.setText(peliculaDTO.getClasificacion());

        // Verificar si la película está activa
        if (peliculaDTO.getActivo()) {
            jLabelMostrarEstado.setText("ACTIVA");
            btnDarBajaOAlta.setText("Dar de Baja");

            // Eliminar todos los ActionListeners anteriores para evitar duplicados
            for (ActionListener actionListeners : btnDarBajaOAlta.getActionListeners()) {
                btnDarBajaOAlta.removeActionListener(actionListeners);
            }
            // Agregar un nuevo listener que da de baja la película cuando se presiona el botón
            btnDarBajaOAlta.addActionListener(evt -> darDeBajaPelicula(peliculaDTO));

        } else {
            jLabelMostrarEstado.setText("INACTIVA");
            btnDarBajaOAlta.setText("Dar de Alta");

            // Eliminar todos los ActionListeners anteriores (igual que arriba)
            for (ActionListener al : btnDarBajaOAlta.getActionListeners()) {
                btnDarBajaOAlta.removeActionListener(al);
            }
            // Agregar un nuevo listener que da de alta la película al presionar el botón
            btnDarBajaOAlta.addActionListener(evt -> darDeAltaPelicula(peliculaDTO));
        }

        // Mostrar la sinopsis, usando HTML para que se ajuste al ancho de 250px y tenga saltos de línea
        jLabelMostrarSinopsis.setText("<html><body style='width:250px'>" + peliculaDTO.getSinopsis() + "</body></html>");
        try {
            RenderizadorImagenPelicula.renderizarImagen(jPanelImagenPelicula, peliculaDTO.getImagen());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al leer la imagen.");
        }
    }

    /**
     * Da de alta una película previamente inactiva. Se solicita confirmación
     * antes de ejecutar la acción.
     *
     * @param peliculaDTO Película a dar de alta.
     */
    private void darDeAltaPelicula(PeliculaDTO peliculaDTO) {
        int respuesta = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que deseas dar de alta la película '" + peliculaDTO.getTitulo() + "'?",
                "Confirmar alta",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (respuesta == JOptionPane.YES_OPTION) {
            boolean exito = control.darAltaPelicula(peliculaDTO);
            if (exito) {
                JOptionPane.showMessageDialog(this, "La película fue dada de alta correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                PeliculaDTO peliculaActualizada = control.buscarPeliculaPorId(peliculaDTO.getIdPelicula());
                this.peliculaDTO = peliculaActualizada;
                cargarDetallesPelicula(peliculaActualizada);
            }
        }
    }

    /**
     * Da de baja una película activa. Se solicita confirmación antes de
     * ejecutar la acción.
     *
     * @param peliculaDTO Película a dar de baja.
     */
    private void darDeBajaPelicula(PeliculaDTO peliculaDTO) {
        int respuesta = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que deseas dar de baja la película '" + peliculaDTO.getTitulo() + "'?",
                "Confirmar baja",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (respuesta == JOptionPane.YES_OPTION) {
            boolean exito = control.darBajaPelicula(peliculaDTO);
            if (exito) {
                JOptionPane.showMessageDialog(this, "La película fue dada de baja correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                PeliculaDTO peliculaActualizada = control.buscarPeliculaPorId(peliculaDTO.getIdPelicula());
                this.peliculaDTO = peliculaActualizada;
                cargarDetallesPelicula(peliculaActualizada);
            }
        }
    }

    /**
     * Elimina la película del sistema de forma permanente. Se solicita
     * confirmación antes de proceder.
     *
     * @param peliculaDTO Película a eliminar.
     */
    private void eliminarPelicula(PeliculaDTO peliculaDTO) {
        int respuesta = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que deseas eliminar la película '" + peliculaDTO.getTitulo() + "'? Esta acción no se puede deshacer.",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );

        if (respuesta == JOptionPane.YES_OPTION) {
            boolean exito = control.eliminarPelicula(peliculaDTO);
            if (exito) {
                JOptionPane.showMessageDialog(this, "Película eliminada correctamente.", "Eliminación exitosa", JOptionPane.INFORMATION_MESSAGE);
                control.mostrarMenuAdministrarPeliculas(this);
                dispose();
            }
        }
    }
}
