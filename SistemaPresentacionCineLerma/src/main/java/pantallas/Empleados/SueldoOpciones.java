/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas.Empleados;

import BOs.EmpleadoBO;
import DTOs.EmpleadoDTO;
import javax.swing.JOptionPane;
import pantallas.Empleados.DialogSeleccionarEmpleado;

/**
 *
 * @author isaac
 */

public class SueldoOpciones extends javax.swing.JFrame {
    private EmpleadoBO empleadoBO;

    /**
     * Creates new form SueldoOpciones
     */
    public SueldoOpciones() {
        this.empleadoBO = new EmpleadoBO();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPorCargo = new javax.swing.JButton();
        btnPorEmpleado = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPorCargo.setBackground(new java.awt.Color(162, 132, 94));
        btnPorCargo.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        btnPorCargo.setForeground(new java.awt.Color(255, 255, 255));
        btnPorCargo.setText("Cargo");
        btnPorCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPorCargoActionPerformed(evt);
            }
        });

        btnPorEmpleado.setBackground(new java.awt.Color(162, 132, 94));
        btnPorEmpleado.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        btnPorEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        btnPorEmpleado.setText("Empleado");
        btnPorEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPorEmpleadoActionPerformed(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        labelTitulo.setText("Selecciona la forma de actualizacion sueldo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(btnPorCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPorEmpleado)
                .addGap(102, 102, 102))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(labelTitulo)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPorEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPorCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(188, 188, 188))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPorCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPorCargoActionPerformed
        
        // cargamos el dialog de ActualizarSueldoDeCargo 
       DialogActualizarSueldoDeCargo dialog = new DialogActualizarSueldoDeCargo(this, true, empleadoBO);
       dialog.setVisible(true);
        
    }//GEN-LAST:event_btnPorCargoActionPerformed

    private void btnPorEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPorEmpleadoActionPerformed

        // vamos a cargar el dialog de seleccion de empleados para seleccionar el empleado a actualizar
        DialogSeleccionarEmpleado dialogoSeleccion = new DialogSeleccionarEmpleado(this, true, empleadoBO);

        dialogoSeleccion.setVisible(true); // Esto bloquea hasta que el diálogo se cierre

        // Despues de que el diálogo se cierra (por Aceptar o Cancelar):
        EmpleadoDTO empleadoElegido = dialogoSeleccion.getEmpleadoSeleccionado();

        if (empleadoElegido != null) { // si el empleado es nulo, fue porque ya hay un empleado seleccionado
            // ahora se llama al JOptionPane con showInputDialog y actualizamos el sueldo con el BO

            String mensajeDialogo = String.format("Empleado: %s %s\nSueldo Actual: $%.2f\n\nIngrese el nuevo sueldo:",
                    empleadoElegido.getNombre(), empleadoElegido.getApellidoP(), empleadoElegido.getSueldo());
            String nuevoSueldoStr = JOptionPane.showInputDialog(this, mensajeDialogo, "Actualizar Sueldo Individual", JOptionPane.PLAIN_MESSAGE);

            if (nuevoSueldoStr != null && !nuevoSueldoStr.trim().isEmpty()) {
                try {
                    double nuevoSueldo = Double.parseDouble(nuevoSueldoStr.trim());
                    // validaciones, por mientras que nomas sea mayor a 0 ahi luego le pongo mas no se
                    if (nuevoSueldo <= 0 ) {
                        JOptionPane.showMessageDialog(this, "Monto de sueldo inválido.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    
                    int confirm = JOptionPane.showConfirmDialog(this,
                            String.format("¿Desea actualizar el sueldo de %s %s a $%.2f?",
                                    empleadoElegido.getNombre(), empleadoElegido.getApellidoP(), nuevoSueldo),
                            "Confirmar Nuevo Sueldo", JOptionPane.YES_NO_OPTION);

                    if (confirm == JOptionPane.YES_OPTION) {
                        boolean exito = empleadoBO.actualizarSueldoEmpleado(empleadoElegido.getId(), nuevoSueldo);
                        if (exito) {
                            JOptionPane.showMessageDialog(this, "Sueldo actualizado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                            // Aquí no necesitas actualizar la tabla del DialogSeleccionarEmpleado porque ya se cerró.
                            // Si el FrameSueldoOpciones tuviera alguna tabla que mostrar, la actualizarías.
                        } else {
                            JOptionPane.showMessageDialog(this, "No se pudo actualizar el sueldo.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Por favor, ingrese un valor numérico para el sueldo.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
                } catch (Excepciones.Empleados.ValidacionEmpleadoException | Excepciones.Empleados.ActualizarEmpleadoException | Excepciones.PersistenciaException ex) { // Ajusta tus excepciones
                    JOptionPane.showMessageDialog(this, "Error al actualizar sueldo: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            // El usuario cerró el diálogo de selección o presionó Cancelar
            System.out.println("Selección de empleado cancelada.");
        }
    
    }//GEN-LAST:event_btnPorEmpleadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(SueldoOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(SueldoOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(SueldoOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(SueldoOpciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new SueldoOpciones().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPorCargo;
    private javax.swing.JButton btnPorEmpleado;
    private javax.swing.JLabel labelTitulo;
    // End of variables declaration//GEN-END:variables
}

