/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package capaPresentacion;

import DTOs.PagoDTO;
import DTOs.TarjetaDTO;
import Excepciones.GestionReservaException;
import java.time.YearMonth;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel Miribe
 */
public class PantallaPagoTarjeta extends javax.swing.JDialog {

    private ControlDeNavegacion control = ControlDeNavegacion.getInstancia();

    /**
     * Creates new form PantallaPagoTarjeta
     */
    public PantallaPagoTarjeta() throws GestionReservaException {
        initComponents();
        setearTotalPagar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        textNumeroTarjeta = new javax.swing.JTextField();
        txtNumeroTarjeta = new javax.swing.JLabel();
        textFechaVencimiento = new javax.swing.JTextField();
        txtFechaVencimiento = new javax.swing.JLabel();
        textCVV = new javax.swing.JTextField();
        txtCVV = new javax.swing.JLabel();
        textPropietario = new javax.swing.JTextField();
        txtPropietario = new javax.swing.JLabel();
        btnCompletarPago = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        labelPago = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(420, 550));

        Titulo.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 64)); // NOI18N
        Titulo.setText("Tarjeta");

        textNumeroTarjeta.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        textNumeroTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNumeroTarjetaActionPerformed(evt);
            }
        });

        txtNumeroTarjeta.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        txtNumeroTarjeta.setText("Numero de tarjeta:");

        textFechaVencimiento.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        textFechaVencimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFechaVencimientoActionPerformed(evt);
            }
        });

        txtFechaVencimiento.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        txtFechaVencimiento.setText("Fecha de vencimiento:");

        textCVV.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        textCVV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCVVActionPerformed(evt);
            }
        });

        txtCVV.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        txtCVV.setText("CVV:");

        textPropietario.setFont(new java.awt.Font("Tw Cen MT", 0, 18)); // NOI18N
        textPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPropietarioActionPerformed(evt);
            }
        });

        txtPropietario.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        txtPropietario.setText("Propietario:");

        btnCompletarPago.setBackground(new java.awt.Color(255, 149, 0));
        btnCompletarPago.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        btnCompletarPago.setForeground(new java.awt.Color(255, 255, 255));
        btnCompletarPago.setText("Completar pago");
        btnCompletarPago.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCompletarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletarPagoActionPerformed(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(162, 132, 94));
        btnVolver.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 24)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver");
        btnVolver.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        labelPago.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(183, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Titulo)
                        .addGap(213, 213, 213))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCompletarPago, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(201, 201, 201))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumeroTarjeta)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFechaVencimiento)
                                    .addComponent(textFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCVV)
                                    .addComponent(textCVV, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPropietario)
                                    .addComponent(textPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(textNumeroTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(174, 174, 174))))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPago)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(Titulo)
                .addGap(71, 71, 71)
                .addComponent(txtNumeroTarjeta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textNumeroTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtFechaVencimiento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFechaVencimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtCVV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textCVV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPropietario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(btnCompletarPago, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(labelPago)
                .addGap(47, 47, 47)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textNumeroTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNumeroTarjetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNumeroTarjetaActionPerformed

    private void textFechaVencimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFechaVencimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFechaVencimientoActionPerformed

    private void textCVVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCVVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCVVActionPerformed

    private void textPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPropietarioActionPerformed


    private void btnCompletarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletarPagoActionPerformed

        //PRIMERO SE DEBEN VALIDAR LOS CAMPOS
        if (!validarCampos()) {
            return;
        }

        //DESPUES SE DEBE VALIDAR EL PAGO
        if (!validarPagoTarjeta()) {
            dispose();
            control.mostrarPantallaPagoRechazado();
            return;
        }
        //Mostrar pantalla de detalle de la compra hecha, en caso de que el pago y la cuenta ingresada sean correctos

        control.mostrarDetalleBoleto();
        dispose();

    }//GEN-LAST:event_btnCompletarPagoActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        control.mostrarSeleccionarMetodoPago();
        dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton btnCompletarPago;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel labelPago;
    private javax.swing.JTextField textCVV;
    private javax.swing.JTextField textFechaVencimiento;
    private javax.swing.JTextField textNumeroTarjeta;
    private javax.swing.JTextField textPropietario;
    private javax.swing.JLabel txtCVV;
    private javax.swing.JLabel txtFechaVencimiento;
    private javax.swing.JLabel txtNumeroTarjeta;
    private javax.swing.JLabel txtPropietario;
    // End of variables declaration//GEN-END:variables

    /**
     * Valida los campos de entrada para asegurarse de que no estén vacios y que
     * el formato del correo sea correcto.
     *
     * @return true si todos los campos son válidos; false si hay algún error en
     * la validación.
     */
    public boolean validarCampos() {
        //Se muestra un error si alguno de los campos estan vacios
        if (textNumeroTarjeta.getText().trim().isEmpty() || textFechaVencimiento.getText().trim().isEmpty() || textCVV.getText().trim().isEmpty() || textPropietario.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ERROR: No pueden haber campos vacios", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (textCVV.getText().trim().length() > 3 || textCVV.getText().trim().length() < 3) {
            JOptionPane.showMessageDialog(null, "ERROR: Por favor ingresa un CVV valido, la longitud debe ser estrictamente de 3 numeros", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!textCVV.getText().trim().matches("-?\\d+")) {
            JOptionPane.showMessageDialog(null, "ERROR: Por favor ingresa un CVV valido", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (textNumeroTarjeta.getText().trim().length() > 16 || textNumeroTarjeta.getText().trim().length() < 15) {
            JOptionPane.showMessageDialog(null, "ERROR: Por favor ingresa un numero de tarjeta valido, la longitud debe ser estrictamente de entre 15 y 16 numeros", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!textNumeroTarjeta.getText().trim().matches("-?\\d+")) {
            JOptionPane.showMessageDialog(null, "ERROR: Por favor ingresa un numero de tarjeta valido", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (!textFechaVencimiento.getText().trim().matches("\\d{2}/\\d{2}")) {
            JOptionPane.showMessageDialog(null, "ERROR: Por favor ingresa una fecha de vencimiento valida, (FORMATO: MM/AA)", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        TarjetaDTO cuentaTarjeta = construirDTO();

        //Se valida la cuenta segun el dto creado 
        if (control.verificarCuentaTarjeta(cuentaTarjeta) == null) {
            JOptionPane.showMessageDialog(null, "ERROR: Cuenta invalida", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    /**
     * Construye un objeto TarjetaDTO a partir de los datos ingresados en los
     * campos de texto del numeroTarjeta, titular, cvv, fechaVencimiento.
     *
     * @return un objeto TarjetaDTO.
     */
    private TarjetaDTO construirDTO() {
        //CONVERTIR LA FECHA INGRESADA POR EL USUARIO A UN DATE REAL
        String fechaVencimientoStr = textFechaVencimiento.getText().trim();

        // Formateador para MM/AA
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("M/yy");

        // Parsear el String a YearMonth
        YearMonth yearMonth = YearMonth.parse(fechaVencimientoStr, formatter);

        // Convertir a Date (último día del mes a medianoche)
        Date fechaVencimientoIngresada = Date.from(
                yearMonth.atEndOfMonth() // Obtiene el último día del mes (ej: 31 de Mayo 2026)
                        .atStartOfDay() // Hora 00:00
                        .atZone(ZoneId.systemDefault()) // Zona horaria del sistema
                        .toInstant()
        );

        //CREAR DTO DE TARJETA
        TarjetaDTO cuentaTarjeta = new TarjetaDTO();
        String numeroTarjeta = textNumeroTarjeta.getText().trim();
        String titular = textPropietario.getText().trim();
        Integer CVV = Integer.valueOf(textCVV.getText().trim());
        Date fechaVencimiento = fechaVencimientoIngresada;
        cuentaTarjeta.setNumeroTarjeta(numeroTarjeta);
        cuentaTarjeta.setTitular(titular);
        cuentaTarjeta.setCvv(CVV);
        cuentaTarjeta.setFechaVencimiento(fechaVencimiento);
        return cuentaTarjeta;
    }

    /**
     * Construye un objeto PagoDTO a partir del costo total calculado.
     *
     * @return un objeto PagoDTO con el monto y la fecha/hora del pago
     * establecidos.
     */
    private PagoDTO construirPagoDTO() {
        //Crear DTO
        Date fechaHoy = new Date();
        PagoDTO pago = new PagoDTO();
        Double monto = control.calcularCostoTotal();
        pago.setEstado("");
        pago.setFechaHora(fechaHoy);
        pago.setMonto(monto);
        return pago;
    }

    /**
     * Valida el pago a realizar a traves de Tarjeta, asegurandose de que el
     * monto no exceda el saldo de la cuenta de Tarjeta del cliente.
     *
     * @return true si el pago es valido y se procesa correctamente; false si la
     * cuenta de Tarjeta no existe o si el monto del pago es mayor que el saldo
     * de la cuenta.
     */
    public boolean validarPagoTarjeta() {
        PagoDTO pagoTarjeta = construirPagoDTO();
        TarjetaDTO cuentaTarjeta = construirDTO();
        TarjetaDTO cuentaTarjetaExistente = control.verificarCuentaTarjeta(cuentaTarjeta);

        if (cuentaTarjetaExistente == null) {
            return false;
        }

        if (pagoTarjeta.getMonto() > cuentaTarjetaExistente.getSaldo()) {
            return false;
        }

        control.procesarPagoTarjeta(cuentaTarjetaExistente, pagoTarjeta);
        control.actualizarSaldoTarjeta(cuentaTarjetaExistente, pagoTarjeta);
        return true;

    }

    /**
     * Establece el total a pagar en la etiqueta correspondiente, calculando el
     * costo total a travess del control.
     */
    private void setearTotalPagar() {
        String total = Double.toString(control.calcularCostoTotal());
        labelPago.setText("Total a pagar: " + total);
    }

}
